<fmxmlsnippet type="FMObjectList">
<CustomFunction id="92" functionArity="1" visible="True" parameters="prefName" name="Audit_PrefRead"><Calculation><![CDATA[// Audit_PrefRead ( PrefName )
// version 1.6, Erik Shagdar, NYHTC

/*
	Send in a preference name.
	Returns a value of preference ( field name ).


REQUIRES:
	#
	DictGet
	DictListKeys
	FieldNameShort


HISTORY:
	1.6 - 2016-11-22 ( eshagdar/dshockley ): simplified dictPrefs setup, added Short option.
	1.5.1 - 2016-09-29 ( eshagdar ): updated documentation.
	1.5 - 2016-09-14 ( eshagdar ): added cr/mod fields, auto1, audit trigger/acct/ts fields. changed hard-coded names to be references instead. Deprecated RecID, use UUID instead.
	1.4 - 2016-07-06 ( eshagdar ): renamed _Audit_PrefRead to Audit_PrefRead.
	1.3 - 2016-06-16 ( eshagdar ): renamed SyncDeK_PrefRead to _Audit_PrefRead. Updated RecID/UUID prefName
	1.2 - 2015-10-14 ( eshagdar ): reformatted to use a Dict instead. Added OrgNumMatch pref.
	1.1 - 2015-07-08 ( eshagdar ): all params are not proper case
	1.0 - 2013-12-05 ( eshagdar ): first created.
*/


Let ( [
		prefName = If ( IsEmpty ( prefName ) ; "help" ; prefName );
		dictPrefs = 
				# ( "OrgNum" ; FieldNameShort ( ZZ_INTERFACE::zAutoOrgNum ) )
			&	# ( "OrgMatch" ; FieldNameShort ( ZZ_INTERFACE::zAutoOrgMATCH ) )

			&	# ( "PubFlag" ; FieldNameShort ( ZZ_INTERFACE::SyncDeK_pubFlag ) )
			&	# ( "UUID" ; FieldNameShort ( ZZ_INTERFACE::zzAudit_UUID ) )
			&	# ( "Trigger" ; FieldNameShort ( ZZ_INTERFACE::zzAudit_ModTrigger ) )
			&	# ( "AuditAccount" ; FieldNameShort ( ZZ_INTERFACE::zzAudit_ModAccount ) )
			&	# ( "AuditTS" ; FieldNameShort ( ZZ_INTERFACE::zzAudit_ModTS ) )

			&	# ( "Auto1" ; FieldNameShort ( ZZ_INTERFACE::zAuto1 ) )
			&	# ( "AutoSpace" ; FieldNameShort ( ZZ_INTERFACE::zAutoSpace ) )
			&	# ( "RecordID" ; FieldNameShort ( ZZ_INTERFACE::zRecordID ) )
			&	# ( "CalcRecID" ; FieldNameShort ( ZZ_INTERFACE::zCalcRecID ) )
			&	# ( "TableName" ; FieldNameShort ( ZZ_INTERFACE::zTableNm ) )

			&	# ( "CrAccount" ; FieldNameShort ( ZZ_INTERFACE::zCrAcct ) )
			&	# ( "CrUser" ; FieldNameShort ( ZZ_INTERFACE::zCrNm ) )
			&	# ( "CrScript" ; FieldNameShort ( ZZ_INTERFACE::zCrScript ) )
			&	# ( "CrTS" ; FieldNameShort ( ZZ_INTERFACE::zCrTStmp ) )

			&	# ( "ModAccount" ; FieldNameShort ( ZZ_INTERFACE::zModAcct ) )
			&	# ( "ModUser" ; FieldNameShort ( ZZ_INTERFACE::zModNm ) )
			&	# ( "ModScript" ; FieldNameShort ( ZZ_INTERFACE::zModScript ) )
			&	# ( "ModTS" ; FieldNameShort ( ZZ_INTERFACE::zModTStmp ) )



/*
	2016-09-15 ( eshagdar ): This is for backwards compatibility. Check against base elements next time it is refreshed ( currently at 2016-08-03 )
*/
			&	# ( "RecID" ; FieldNameShort ( ZZ_INTERFACE::zzAudit_UUID ) )



	];

	Case ( 
		prefName = "help" 
		; "Below is a list of available commands¶¶" & DictListKeys ( dictPrefs ) 
		;

		/* only the field SHORT name is desired: */
		"_Short" = Right ( prefName ; Length ( "_Short" ) )
		; DictGet ( dictPrefs ; Left ( prefName ; Length ( prefName ) - Length ( "_Short" ) ) )
		;

		"Short_" = Left ( prefName ; Length ( "Short_" ) )
		; DictGet ( dictPrefs ; Right ( prefName ; Length ( prefName ) - Length ( "Short_" ) ) )
		;
		 
		/* default is fully-qualified field name: */
		Get ( LayoutTableName ) & "::" & DictGet ( dictPrefs ; prefName )
	)
)]]></Calculation></CustomFunction>
</fmxmlsnippet>