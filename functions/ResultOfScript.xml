<fmxmlsnippet type="FMObjectList">
	<CustomFunction id="219" functionArity="2" visible="True" parameters="resultType;resultDescription" name="ResultOfScript">
		<Calculation><![CDATA[// ResultOfScript ( resultType; resultDescription )
// version 1.1.9, Daniel A. Shockley & Erik Shagdar, NYHTC

/*
	Quickly provide script result (for use in Exit Script) to return this script's result in dictionary form, using NYHTC standards.

NOTE: 
	TextRequiredParams looks ONLY at the incoming ScriptParameter ( $params ), not whether each variable is defined. If the script _can_ handle a param not being specified by providing a default value or a user input and setting the script variable, the parameter is NOT truly required. 

REQUIRES:
	#
	CallStack
	ValueApplyToList


HISTORY:
	1.1.9 - 2019-08-19 ( dshockley ): Added comment that TextRequiredParams looks only at $params, not each var separately. 
	1.1.8 - 2019-08-14 ( dshockley ): Fix: added ValueApplyToList to the Requires list. 
	1.1.7 - 2019-06-25 ( dshockley, eshagdar ): Added the "TestRequiredParams" resultType, as well as the new additional behavior for "MissingParams" to build the list itself.  
	1.1.6 - 2018-03-16 ( eshagdar ): help message typo
	1.1.5 - 2017-11-29 ( eshagdar ): add devMsg only if the tag is used.
	1.1.4 - 2017-11-15 ( eshagdar ): fix incorrectly specified resultType.
	1.1.3 - 2017-08-22 ( eshagdar ): added ExecutionTimestamp, ExecutionAccount keys to return dict
	1.1.2 - 2017-05-18 ( eshagdar ): added #DEVMSG
	1.1.1 - 2017-01-26 ( eshagdar ): updated MissingParams description.
	1.1 - 2017-01-17 ( eshagdar ): updated with default values. added as standard function. added to script template.
	1.0 - 2012-xx-xx ( dshockley ): created.
*/


If ( resultType = "help" or resultDescription = "help";
	/* display the help text */
	List (
		"Return a dictionary of the standard key-value pairs.";
		"    'ResultType' can take on one of the standard results - 'Success', 'Error', or 'Cancel' ( defaults to 'Success' if none is specified ).";
		"    'ResultDescription' uses a pre-canned description for specified resultType, or passes through the specified string.";
		" ";
		"  NOTE: Specifying '#DEVMSG' tag in the resultDescription will append the description to notify the developers where the error occured.";
		"  NOTE: resultType can use a special value of 'MissingParams' which will be converted to 'Error' type and with pre-canned description. You can optionally specify a comma-delimitted list of of missing params in the resultDescription to get them added to the description. the '#DEVMSG' tag is automatically appended for 'MissingParams'"
	);


	/* return a dictionary */
	Let ( [
			SQ = Char ( 39 ) ;  /* single-quote character */
			placeHolderDevMsg = "#DEVMSG" ;
			devMsg = "Please contact your database administrator and give them the following information.¶CallStack:¶" & CallStack ( "DisplayCurrent" );
			str_ScriptAndFile = SQ & Get ( ScriptName ) & SQ & " script in " & SQ & Get ( FileName ) & SQ & " file";



			/* capture incorrectly specified resultType */
			resultType = If ( resultType = "MissingParam"; 
				"MissingParams"; 
				resultType 
			);

			_result = Case ( 
				resultType = "MissingParams";
				"Error";

				not IsEmpty ( resultType ); 
				resultType;

				"Success"
			);

			_description = Case ( 

				resultType = "MissingParams" ;
				str_ScriptAndFile & " was called without required parameters" & 
						If ( not IsEmpty ( $paramKeysRequiredList ) and ( IsEmpty ( resultDescription ) or ( resultDescription = placeHolderDevMsg ) );
							": " & 
							Substitute ( 
								ValueRemoveEmpty ( 
									ValueApplyToList ( 
										"If ( IsEmpty ( DictGet ( $params ; [t] ) ) ; [t] ) "
										; $paramKeysRequiredList 
										; Char ( 13 ) 
										)
									)
								; [ Char ( 13 ) ; ", " ] 
								) & ". " & resultDescription ;
								If ( not IsEmpty ( resultDescription ) ;
										": " & Substitute ( resultDescription ; [ Char ( 13 ) ; ", " ] );
										""
								)
							) &
						". ";

				not IsEmpty ( resultDescription ); 
				resultDescription;

				_result = "Success";
				"Completed " & str_ScriptAndFile & ".";

				_result = "Cancel";
				"User canceled " & str_ScriptAndFile & ".";

				_result = "Error";
				"Encountered error in " & str_ScriptAndFile & ".";

				"Unable to set result description because a non-standard ResultType was specified without a ResultDescription."
			);

			_description = 
				Substitute ( 
					_description; 
					[ placeHolderDevMsg ; devMsg ]
				) ; 
				
			_resultDict = 
					# ( "Result"; _result ) 
				&	# ( "ResultDescription"; _description )
				&	# ( "FileName" ; Get ( FileName ) ) 
				&	# ( "ScriptName" ; Get ( ScriptName ) ) 
				&	# ( "ExecutionTimestamp" ; Get ( CurrentTimestamp ) )
				&	# ( "ExecutionAccount" ; Get ( AccountName ) )

		];

		If ( resultType = "TestRequiredParams";
				not IsEmpty ( 
					ValueRemoveEmpty ( 
						ValueApplyToList ( 
							"If ( IsEmpty ( DictGet ( $params ; [t] ) ) ; [t] ) "
							; $paramKeysRequiredList 
							; Char ( 13 ) 
							)
						)
				);
			_resultDict
		)


	)
)]]></Calculation>
	</CustomFunction>
</fmxmlsnippet>